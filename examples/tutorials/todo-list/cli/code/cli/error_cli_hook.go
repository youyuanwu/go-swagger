// Code generated by go-swagger; DO NOT EDIT.

package cli

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-swagger/go-swagger/examples/tutorials/todo-list/cli/code/models"
	"github.com/spf13/cobra"
)

// register flags to command
func addErrorCmd(cmdPrefix string, cmd *cobra.Command) error {

	// property code
	// TODO: not copy paste
	{
		cmdString := fmt.Sprintf("%v.code", cmdPrefix)
		_ = cmd.PersistentFlags().Int64(cmdString, 0, "")

	}

	// property message
	// TODO: not copy paste
	{
		cmdString := fmt.Sprintf("%v.message", cmdPrefix)
		_ = cmd.PersistentFlags().String(cmdString, "", "Required. ")

		if err := cmd.MarkPersistentFlagRequired(cmdString); err != nil {
			return err
		}

	}

	return nil
}

// retrieve flags from commands, and set value in model. Return true if any flag is passed by user to fill model field.
func retrieveErrorFlags(m *models.Error, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	retAdded := false

	// property code
	{
		cmdString := fmt.Sprintf("%v.code", cmdPrefix)
		if cmd.Flags().Changed(cmdString) { // only
			temp, err := cmd.Flags().GetInt64(cmdString)
			if err != nil {
				return err, false
			}
			m.Code = temp
			retAdded = true
		}
	}

	// property message
	{
		cmdString := fmt.Sprintf("%v.message", cmdPrefix)
		if cmd.Flags().Changed(cmdString) { // only
			temp, err := cmd.Flags().GetString(cmdString)
			if err != nil {
				return err, false
			}
			m.Message = &temp
			retAdded = true
		}
	}

	return nil, retAdded
}
